<div class="row">
  <div id="around_the_world" class="col-sm-12">
    <h1>Diaries written in the last 24 hours</h1>
    <button id="back_to_sign_up" class="btn btn-default">Back to sign up</button>
  </div>
</div>


<style>
path {
  stroke: white;
  stroke-width: 0.25px;
  fill: grey;
}
</style>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="http://d3js.org/topojson.v0.min.js"></script>
<script>
var width = 960,
    height = 500;

var projection = d3.geo.mercator()
    .center([0, 5 ])
    .scale(120)
    .rotate([-180,0]);

var svg = d3.select(".container").append("svg")
    .attr("width", width)
    .attr("height", height);

var path = d3.geo.path()
    .projection(projection);

var g = svg.append("g");

// load and display the World
d3.json("https://gist.githubusercontent.com/d3noob/5193723/raw/598d1ebe0c251cd506c8395c60ab1d08520922a7/world-110m2.json", function(error, topology) {

	// load and display the cities
d3.json("", function(error, data) {
	data = <%= @locations.html_safe %>

	console.log('WHAT DID I GET BACK', data);
    g.selectAll("circle")
       .data(data)
       .enter()
       .append("circle")
       .attr("cx", function(d) {
       	console.log('what is d', d)
               return projection([d.longitude, d.latitude])[0];
       })
       .attr("cy", function(d) {
               return projection([d.longitude, d.latitude])[1];
       })
       .attr("r", 5)
       .style("fill", "red");
 });

	g.selectAll("path")
	      .data(topojson.object(topology, topology.objects.countries)
	          .geometries)
	    .enter()
	      .append("path")
	      .attr("d", path)
	});


// var zoom = d3.behavior.zoom()
//     .on("zoom",function() {
//         g.attr("transform","translate("+ 
//             d3.event.translate.join(",")+")scale("+d3.event.scale+")");
//         g.selectAll("circle")
//             .attr("d", path.projection(projection));
//         g.selectAll("path")  
//             .attr("d", path.projection(projection)); 
// });

// svg.call(zoom)

</script>
